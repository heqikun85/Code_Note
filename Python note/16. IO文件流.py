""" 
1. 文件流的操作
    1. 打开文件流
    * 文件对象 = open(目标文件，访问模式)
                  
    2. 读操作
    * 文件对象.read(): 默认读取整个文件。 或者可以读取指定大小的数据
    * 文件对象.readlines()
    * 文件对象.readline()

    3. 写操作
    * 文件对象.write()
    
    4. seek()指针操作
    * seek(偏移量，起始位置): 起始位置为:0，1:当前位置， 2:文件结尾位置。
    * tell()函数返回当前指针位置。

    5. 关闭
    * close()

    6. 访问模式
        r: 以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。
        rb: 以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。
        r+: 打开一个文件用于读写。文件指针将会放在文件的开头。
        rb+: 以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。
        w: 打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。
        wb: 以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。 
        W+: 打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。
        wb+: 以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。
        a: 打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。
        ab: 以二进制格式打开一个文件用于追加如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。

"""

# 打开文件流
# 访问模式为空，则默认为 read. encoding 参数为读取编码格式。
IOfile = open('/Users/kevinhe/Desktop/学习/Code_Note/Project/IdeaProject/output.txt', mode = 'r', encoding = 'gbk')
print(IOfile.read(10))
# 每个readline只读一行
print(IOfile.readline())
# readlines是全读所有行
print(IOfile.readlines())
# readlines 和 read的区别是在于输出格式上：read按照格式将文件内容作为一个整体输出，
# readlines 则将每一行作为list内的一个element，然后以list的方式输出
IOfile.close()
